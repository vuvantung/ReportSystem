@inject Microsoft.Extensions.Localization.IStringLocalizer<NavMenu> _localizer
@using System.Security.Claims


<link href="/css/all.css" rel="stylesheet">

<UserCard />
<MudNavMenu>    
    
    @* <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Home">@_localizer["Home"]</MudNavLink> 
    <MudNavLink Href="https://codewithmukesh.com/blog/blazor-hero-quick-start-guide/" Target="_blank" Icon="@Icons.Material.Outlined.ReadMore">
        @_localizer["Quick Start Guide"]
    </MudNavLink> 
    <MudNavLink Href="/swagger/index.html" Target="_blank" Icon="@Icons.Material.Outlined.LiveHelp">
        @_localizer["Swagger"]
    </MudNavLink>

    <MudListSubheader Class="mt-2 mb-n2">@_localizer["Personal"]</MudListSubheader>
    @if (_canViewDashboards)
    {
        <MudNavLink Href="/dashboard" Icon="@Icons.Material.Outlined.Dashboard">
            @_localizer["Dashboard"]
        </MudNavLink>
    }
    <MudNavLink Href="/account" Icon="@Icons.Material.Outlined.SupervisorAccount">
        @_localizer["Account"]
    </MudNavLink>
    @if (_canViewAuditTrails)
    {
        <MudNavLink Href="/audit-trails" Icon="@Icons.Material.Outlined.Security">
            @_localizer["Audit Trails"]
        </MudNavLink>
    }

    @if (_canViewDocuments || _canViewDocumentTypes)
    {
        <MudListSubheader Class="mt-2 mb-n2">@_localizer["Document Management"]</MudListSubheader>
        @if (_canViewDocuments)
        {
            <MudNavLink Href="/document-store" Icon="@Icons.Material.Outlined.AttachFile">
                @_localizer["Document Store"]
            </MudNavLink>
        }
        @if (_canViewDocumentTypes)
        {
            <MudNavLink Href="/document-types" Icon="@Icons.Material.Outlined.FileCopy">
                @_localizer["Document Types"]
            </MudNavLink>
        }
    }

    @if (_canViewUsers || _canViewRoles)
    {
        <MudListSubheader Class="mt-2 mb-n2">@_localizer["Administrator"]</MudListSubheader>
        @if (_canViewUsers)
        {
            <MudNavLink Href="/identity/users" Icon="@Icons.Material.Outlined.Person">
                @_localizer["Users"]
            </MudNavLink>
        }
        @if (_canViewRoles)
        {
            <MudNavLink Href="/identity/roles" Icon="@Icons.Material.Outlined.Person">@_localizer["Roles"]</MudNavLink>
        }
    }
    @if (_canViewChat)
    {
        <MudListSubheader Class="mt-2 mb-n2">@_localizer["Communication"]</MudListSubheader>
        <MudNavLink Href="/chat" Icon="@Icons.Material.Outlined.Chat">
            @_localizer["Chat"]
        </MudNavLink>
    }
    @if (_canViewProducts || _canViewBrands)
    {
        <MudListSubheader Class="mt-2 mb-n2">@_localizer["Catalog Management"]</MudListSubheader>
        @if (_canViewProducts)
        {
            <MudNavLink Href="/catalog/products" Icon="@Icons.Material.Outlined.CallToAction">
                @_localizer["Products"]
            </MudNavLink>
        }
        @if (_canViewBrands)
        {
            <MudNavLink Href="/catalog/brands" Icon="@Icons.Material.Outlined.CallToAction">
                @_localizer["Brands"]
            </MudNavLink>
        }
    } *@

    <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Home">Trang chủ</MudNavLink>
    <MudNavGroup Margin="Margin.None" Title="Cá nhân" @bind-Expanded=_isExpanded_Personal>
        @if (_canViewDashboards)
        {
            <MudNavLink Href="/dashboard" Icon="@Icons.Material.Outlined.Dashboard">Bảng điều khiển</MudNavLink>
        }
        <MudNavLink Href="/account" Icon="@Icons.Material.Outlined.SupervisorAccount">Tài khoản</MudNavLink>
        @if (_canViewAuditTrails)
        {
            <MudNavLink Href="/audit-trails" Icon="@Icons.Material.Outlined.Security">Hoạt động</MudNavLink>
        }
    </MudNavGroup>

    @if (_canViewUsers || _canViewRoles || _canViewHangfire)
    {
        <MudNavGroup Title="Quản trị" @bind-Expanded=_isExpanded_Administrator>
            @if (_canViewUsers)
            {
                <MudNavLink Href="/identity/users" Icon="@Icons.Material.Outlined.Person">Người dùng</MudNavLink>
            }
            @if (_canViewRoles)
            {
                <MudNavLink Href="/identity/roles" Icon="@Icons.Material.Outlined.ManageAccounts">Vai trò</MudNavLink>
            }
            @if (_canViewHangfire)
            {
                <MudNavLink Href="/jobs" Target="_blank" Icon="@Icons.Material.Outlined.Work">Hangfire"</MudNavLink>
            }
        </MudNavGroup>
    }

    @if (_canViewDocuments || _canViewDocumentTypes)
    {
        <MudNavGroup Title="Quản lý dữ liệu" @bind-Expanded="_isExpanded_Document">
            @if (_canViewDocuments)
            {
                <MudNavLink Href="/document-store" Icon="@Icons.Material.Outlined.AttachFile">Lưu trữ dữ liệu</MudNavLink>
            }
            @if (_canViewDocumentTypes)
            {
                <MudNavLink Href="/document-types" Icon="@Icons.Material.Outlined.FileCopy">Loại tài liệu</MudNavLink>
            }
        </MudNavGroup>
    }

    @if (_canViewProducts || _canViewBrands)
    {
        <MudNavGroup Title="Quản lý danh mục" @bind-Expanded=_isExpanded_CatalogManagement>
            <MudNavLink Href="/catalog/products" Icon="@Icons.Material.Outlined.CallToAction">Sản phẩm</MudNavLink>
            <MudNavLink Href="/catalog/brands" Icon="@Icons.Material.Outlined.CallToAction">Nhãn hiệu</MudNavLink>
        </MudNavGroup>
    }

    @if (_canViewBaoCaoKT || _canViewBaoCaoPhat || _canViewBaoCaoGiaoDich)
    {
        <MudNavGroup Title="Báo cáo" @bind-Expanded=_isExpanded_Report>
            @if (_canViewBaoCaoGiaoDich)
            {
                <MudNavLink Href="/catalog/brands" Icon="@Icons.Material.Outlined.CallToAction">Báo cáo giao dịch</MudNavLink>
            }
            @if (_canViewBaoCaoKT)
            {
                <MudNavLink Href="/catalog/products" Icon="@Icons.Material.Outlined.CallToAction">Báo cáo khai thác</MudNavLink>
            }
            @if (_canViewBaoCaoPhat)
            {
                <MudNavLink Href="/catalog/brands" Icon="@Icons.Material.Outlined.CallToAction">Báo cáo phát</MudNavLink>
            }
        </MudNavGroup>
    }

    @if (_canViewChat)
    {
        <MudNavGroup Title="Giao tiếp" @bind-Expanded=_isExpanded_Communication>
            <MudNavLink Href="/chat" Icon="@Icons.Material.Outlined.Chat">Chat</MudNavLink>                
        </MudNavGroup>        
    }    
    
</MudNavMenu>

@code {
    private ClaimsPrincipal _authenticationStateProviderUser;

    private bool _canViewHangfire;
    private bool _canViewDashboards;
    private bool _canViewDocuments;
    private bool _canViewDocumentTypes;
    private bool _canViewAuditTrails;   
    private bool _canViewRoles;
    private bool _canViewUsers;
    private bool _canViewChat;
    private bool _canViewProducts;
    private bool _canViewBrands;

    //----------------------------
    private bool _canViewBaoCaoKT;
    private bool _canViewBaoCaoPhat;
    private bool _canViewBaoCaoGiaoDich;
    //----------------------------
    bool _isExpanded_Administrator = false;
    bool _isExpanded_Communication = false;
    bool _isExpanded_CatalogManagement = false;
    bool _isExpanded_Report = false;
    bool _isExpanded_Document = false;
    bool _isExpanded_Personal = false;

    

    protected override async Task OnParametersSetAsync()
    {
        _authenticationStateProviderUser = await _stateProvider.GetAuthenticationStateProviderUserAsync();
        _canViewHangfire = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Hangfire.View)).Succeeded;
        _canViewDashboards = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Dashboards.View)).Succeeded;
        _canViewDocuments = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Documents.View)).Succeeded;
        _canViewDocumentTypes = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.DocumentTypes.View)).Succeeded;
        _canViewAuditTrails = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.AuditTrails.View)).Succeeded;
        _canViewRoles = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Roles.View)).Succeeded;
        _canViewUsers = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Users.View)).Succeeded;
        _canViewChat = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Communication.Chat)).Succeeded;
        _canViewProducts = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Products.View)).Succeeded;
        _canViewBrands = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Brands.View)).Succeeded;
        //---------------------------------------------------------------------------------------------------------------------------------------
        _canViewBaoCaoKT = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.BaoCaoKT.View)).Succeeded;
        _canViewBaoCaoPhat = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.BaoCaoPhat.View)).Succeeded;
        _canViewBaoCaoGiaoDich = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.BaoCaoGiaoDich.View)).Succeeded;
    }
}